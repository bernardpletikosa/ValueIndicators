{"name":"Value-indicators","tagline":"Android value indicator library","body":"Value Indicators\r\n=============================\r\n\r\nAndroid Library for graphic value representation.\r\n\r\n<img src=\"gif/all.gif\">\r\n\r\n##Modules\r\n\r\n* **library** - library code.\r\n* **sample** - simple app to show how to use different indicators via xml or code.\r\n* **showcase** - simple app to show how different parameters affect indicators display.\r\n\r\n## Types\r\n\r\n- **Circle**\r\n- **Line**\r\n- **Pie**\r\n- **Half Pie**\r\n- **Quarter Pie**\r\n- **Triangle**\r\n\r\n<img src=\"gif/circle.gif\" height = 250 width = 140>.<img src=\"gif/line.gif\"height = 250 width = 140>.<img src=\"gif/triangle.gif\" height = 250 width = 140>\r\n<img src=\"gif/pie.gif\" height = 250 width = 140>.<img src=\"gif/half_pie.gif\" height = 250 width = 140>.<img src=\"gif/quarter_pie.gif\" height = 250 width = 140>\r\n\r\n## Usage\r\n\r\nAdd the following to your build.gradle file:\r\n\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        compile 'com.github.bernardpletikosa:value-indicators:1.0.4'\r\n    }\r\n\r\nOr user [jar file](https://oss.sonatype.org/content/repositories/releases/com/github/bernardpletikosa/value-indicators/1.0.1/value-indicators-1.0.1-sources.jar)\r\n\r\n###Usage overview\r\n\r\nIndicator can be set up in code or in xml.\r\nFor all indicator types there are some common attributes: minimal and maximal value to indicate, \r\nanimation duration and indicator colors.\r\n\r\n    <attr name=\"main_color\" format=\"color\"/>\r\n    <attr name=\"background_color\" format=\"color\"/>\r\n    <attr name=\"min_value\" format=\"float\"/>\r\n    <attr name=\"max_value\" format=\"float\"/>\r\n    <attr name=\"target_value\" format=\"float\"/>\r\n    <attr name=\"animation_duration\" format=\"integer\"/>\r\n\r\nFor textual value indication on top of indicator use attributes below. Text is shown by default\r\nand can be removed by setting **text_show** to false. All xml attributes have appropriate methods.\r\n\r\n    <attr name=\"text_show\" format=\"boolean\"/>\r\n    <attr name=\"text_animate\" format=\"boolean\"/>\r\n    <attr name=\"text_color\" format=\"color\"/>\r\n    <attr name=\"text_size\" format=\"dimension\"/>\r\n    <attr name=\"text_prefix\" format=\"string\"/>\r\n    <attr name=\"text_suffix\" format=\"string\"/>\r\n    <attr name=\"text_value_decimal\" format=\"boolean\"/>\r\n\r\nHowever, there are special values for every indicator type.\r\n\r\n#####Circle indicator\r\n    <attr name=\"circle_radius\" format=\"dimension\"/>\r\n\r\n#####Line indicator\r\n    <attr name=\"line_width\" format=\"dimension\"/>\r\n    <attr name=\"line_height\" format=\"dimension\"/>\r\n    <attr name=\"line_direction\" format=\"enum\">\r\n        <enum name=\"left_right\" value=\"2\"/>\r\n        <enum name=\"right_left\" value=\"3\"/>\r\n        <enum name=\"top_bottom\" value=\"4\"/>\r\n        <enum name=\"bottom_top\" value=\"5\"/>\r\n    </attr>\r\n\r\n#####Pie indicator\r\n    <attr name=\"pie_radius\" format=\"dimension\"/>\r\n    <attr name=\"pie_center_paint\" format=\"color\"/>\r\n    <attr name=\"pie_inner_radius\" format=\"integer\"/>\r\n    <attr name=\"pie_start_angle\" format=\"integer\"/>\r\n    <attr name=\"pie_direction\" format=\"enum\">\r\n        <enum name=\"clockwise\" value=\"0\"/>\r\n        <enum name=\"counter_clockwise\" value=\"1\"/>\r\n    </attr>\r\n\r\n#####HalfPie indicator\r\n    <attr name=\"half_pie_orientation\" format=\"enum\">\r\n        <enum name=\"east\" value=\"0\"/>\r\n        <enum name=\"west\" value=\"1\"/>\r\n        <enum name=\"north\" value=\"2\"/>\r\n        <enum name=\"south\" value=\"3\"/>\r\n    </attr>\r\n\r\n#####QuarterPie indicator\r\n    <attr name=\"quarter_pie_orientation\" format=\"enum\">\r\n        <enum name=\"north_east\" value=\"4\"/>\r\n        <enum name=\"south_east\" value=\"5\"/>\r\n        <enum name=\"north_west\" value=\"6\"/>\r\n        <enum name=\"south_west\" value=\"7\"/>\r\n    </attr>\r\n        \r\n###Usage Examples\r\n\r\nFor example, Pie indicator can be set like this\r\n\r\n    <com.github.bernardpletikosa.indicators.pie.PieIndicator\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        indicators:main_color=\"@color/main\"\r\n        indicators:background_color=\"@color/background\"\r\n        indicators:animation_duration=\"500\"\r\n        indicators:min_value=\"0\"\r\n        indicators:max_value=\"20\"\r\n        indicators:pie_center_paint=\"@color/app_background\"\r\n        indicators:pie_radius=\"100dp\"\r\n        indicators:pie_inner_radius=\"70\"\r\n        indicators:pie_start_angle=\"0\"\r\n        indicators:pie_direction=\"clockwise\"/>\r\nor like this\r\n\r\n    final PieIndicator pie = (PieIndicator) findViewById(R.id.pie);\r\n    pie.setRange(0, 20); //min and max value, can be negative\r\n    pie.setAnimationDuration(500); //default  value is 500\r\n    pie.setMainColor(getResources().getColor(R.color.main));\r\n    pie.setBackGroundColor(getResources().getColor(R.color.background));\r\n    pie.setAnimationListener(null);\r\n    pie.setInterpolator(new AccelerateDecelerateInterpolator());\r\n    pie.setCenterPaint(getResources().getColor(R.color.center));\r\n    pie.setDirection(Direction.CLOCKWISE); //indication direction CLOCKWISE | COUNTER_CLOCKWISE\r\n    pie.setRadius(SizeUnit.DP, 100);\r\n    pie.setInnerRadius(70); //percentage of total radius\r\n    pie.setStartingAngle(0); //indication start\r\n\r\nFor every indicator type there are special values that can change indicator looks.\r\n\r\n####Circle indicator\r\nCircle indicator is pretty straightforward.\r\n\r\n<img src=\"gif/circle.gif\" height = 300 width = 170>\r\n####Line indicator\r\nFor line indicator *line_direction* attribute is very important. \r\nImage below shows all directions *left_right, right_left, top_bottom, bottom_top*, respectively.\r\n    \r\n<img src=\"gif/line.gif\" height = 300 width = 170>\r\n\r\n####Pie indicator\r\nPie indicators can be full or empty. \r\nRadius of empty space *pie_inner_radius* is given as a percentage of total radius *pie_radius*.\r\nColor of empty space can be set via *pie_center_paint* attribute.\r\nAll pie indicators have *pie_direction* attribute that shows direction of animation which can be \r\nCLOCKWISE or COUNTER_CLOCKWISE.\r\nPie indicator specific attribute *pie_start_angle* is used to shift indication start to any angle.\r\n\r\n<img src=\"gif/pie.gif\" height = 300 width = 170>\r\n\r\n####HalfPie indicator\r\n\r\nThe only difference in attributes between Pie and HalfPie is *half_pie_orientation*. \r\nDepending on orientation *north, south, east, west* this indicator will have different \r\nappearances as shown below.\r\n Just for example second indicator's *pie_inner_radius* attribute is set to 0.\r\n\r\n<img src=\"gif/half_pie.gif\" height = 300 width = 170>\r\n\r\n####QuarterPie indicator\r\n\r\nQuarterPie also has a special *quarter_pie_orientation* attribute that can be *north_west,\r\nsouth_west, north_east, south_east* like on image below. HalfPie also can be full or empty.\r\n\r\n<img src=\"gif/quarter_pie.gif\" height = 300 width = 170>\r\n\r\n####Triangle indicator\r\n\r\nTriangle orientation can be *left_right, right_left* like on image below. \r\n\r\n<img src=\"gif/triangle.gif\" height = 300 width = 170>\r\n\r\n##Special thanks\r\n[Daniel Nadeau](https://bitbucket.org/danielnadeau/holographlibrary/overview) for inspiration\r\n\r\n[Chris Banes] (https://github.com/chrisbanes/gradle-mvn-push) for gradle-mvn-push\r\n\r\n[Hugo Doménech Juárez] (https://github.com/hudomju) for word of advice","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}